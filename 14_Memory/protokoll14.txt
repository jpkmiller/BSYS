No. 1

Segmentation fault is the result of the program

-----------------------------------------------
No. 2

Reading symbols from null...done.
(gdb) run
Starting program: /home/jo391mue/Documents/BSYS/14_Memory/null

Program received signal SIGSEGV, Segmentation fault.
0x0000555555555149 in main () at null.c:8
8           printf("%d\n", *i);

-----------------------------------------------
No. 3

jo391mue@ct-bsys-ws19-3:~/Documents/BSYS/14_Memory$ valgrind --leak-check=yes ./null
==25601== Memcheck, a memory error detector
==25601== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==25601== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==25601== Command: ./null
==25601==
==25601== Invalid read of size 4
==25601==    at 0x109149: main (null.c:8)
==25601==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==25601==
==25601==
==25601== Process terminating with default action of signal 11 (SIGSEGV)
==25601==  Access not within mapped region at address 0x0
==25601==    at 0x109149: main (null.c:8)
==25601==  If you believe this happened as a result of a stack
==25601==  overflow in your program's main thread (unlikely but
==25601==  possible), you can try to increase the size of the
==25601==  main thread stack using the --main-stacksize= flag.
==25601==  The main thread stack size used in this run was 8388608.
==25601==
==25601== HEAP SUMMARY:
==25601==     in use at exit: 0 bytes in 0 blocks
==25601==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==25601==
==25601== All heap blocks were freed -- no leaks are possible
==25601==
==25601== For counts of detected and suppressed errors, rerun with: -v
==25601== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Segmentation fault

-----------------------------------------------
No. 4

